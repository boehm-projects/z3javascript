/**
 * Copyright Blake Loring <blake_l@parsed.uk> 2015
 */
"use strict";

// The core of the node.js API for Z3. This file could be mostly autogenerated by Z3 scripts. Currently
// only the function bindings are, not the types
var ref = require('ref-napi');
var ArrayType = require('ref-array-napi');

module.exports = function(libPath) {

// Manually defined types (from Z3 Python API). Could possibly be simplified to just Voidp
// but maybe we'll need the distinction later
var Void  = ref.types.void,
    Voidp = ref.refType(Void);

var Z3Exception = Voidp;
var ContextObj = Voidp;
var OptimizeObj = Voidp;
var TheoryObj = Voidp;
var Config = Voidp;
var Symbol = Voidp;
var Sort = Voidp;
var FuncDecl = Voidp;
var Ast = Voidp;
var Pattern = Voidp;
var Model = Voidp;
var Literals = Voidp;
var Constructor = Voidp;
var ConstructorList = Voidp;
var GoalObj = Voidp;
var TacticObj = Voidp;
var ProbeObj = Voidp;
var ApplyResultObj = Voidp;
var StatsObj = Voidp;
var SolverObj = Voidp;
var FixedpointObj = Voidp;
var ModelObj = Voidp;
var AstVectorObj = Voidp;
var ParserContextObj = Voidp;
var AstMapObj = Voidp;
var Params = Voidp;
var ParamDescrs = Voidp;
var FuncInterpObj = Voidp;
var FuncEntryObj = Voidp;
var RCFNumObj = Voidp;
var SolverCallbackObj = Voidp;
var SimplifierObj = Voidp;

// Names for standard types
var CUInt = ref.types.uint32;
var CInt = ref.types.int32;
var CBool = ref.types.bool;
var CFloat = ref.types.float;
var CULong = ref.types.uint64;
var CLong = ref.types.int64;
var CDouble = ref.types.double;
var CChar = ref.types.char;
var CString = ref.types.CString;

// Array types. Not all of these may be valid (check over time)
var AstArray = ArrayType(Ast);
var CIntArray = ArrayType(CInt);
var CUIntArray = ArrayType(CUInt);
var SymbolArray = ArrayType(Symbol);
var SortArray = ArrayType(Symbol);
var FuncDeclArray = ArrayType(FuncDecl);
var ConstructorArray = ArrayType(Constructor);
var ConstructorListArray = ArrayType(ConstructorList);
var PatternArray = ArrayType(Pattern);
var TacticObjArray = ArrayType(TacticObj);
var RCFNumObjArray = ArrayType(RCFNumObj);
